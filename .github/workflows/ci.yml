name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ===== API (.NET 8) =====
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('api/**/*.csproj') }}
          restore-keys: ${{ runner.os }}-nuget-

      - name: Restore & Build API
        working-directory: api
        run: |
          dotnet restore
          dotnet build --configuration Release --no-restore
          dotnet publish -c Release -o ./publish

      - name: Upload API artifact
        uses: actions/upload-artifact@v4
        with:
          name: api-publish
          path: api/publish

      # ===== UI (Node 20 + Vite) =====
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm
          cache-dependency-path: ui/package-lock.json

      - name: Install UI deps
        working-directory: ui
        run: npm ci

      - name: Build UI
        working-directory: ui
        env:
          # при необходимости укажите базу API, чтоб билд не падал из-за undefined
          VITE_API_BASE: /api
        run: npm run build

      - name: Upload UI artifact
        if: success() && hashFiles('ui/dist/**') != ''
        uses: actions/upload-artifact@v4
        with:
          name: ui-dist
          path: ui/dist

  # Лёгкая проверка docker-compose синтаксиса (без запуска контейнеров)
  compose-lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: docker compose config -q
        run: docker compose -f docker-compose.yml config -q
