// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TelegramBlock.DbContext;

#nullable disable

namespace TelegramBlock.Migrations
{
    [DbContext(typeof(GameDbContext))]
    [Migration("20250729051953_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TelegramBlock.Entities.BroadcastedLine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Direction")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("GameSessionId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsSavedByUser")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsViewed")
                        .HasColumnType("boolean");

                    b.Property<string>("Locale")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phrase")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Reaction")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SourceRow")
                        .HasColumnType("integer");

                    b.Property<string>("Tags")
                        .HasColumnType("text");

                    b.Property<bool>("WasWinMoment")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("GameSessionId");

                    b.ToTable("BroadcastedLines");
                });

            modelBuilder.Entity("TelegramBlock.Entities.BurnEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CascadeLevel")
                        .HasColumnType("integer");

                    b.Property<Guid>("GameSessionId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("OccurredAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RowY")
                        .HasColumnType("integer");

                    b.Property<int>("ScoreAwarded")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("BurnEvents");
                });

            modelBuilder.Entity("TelegramBlock.Entities.Figure", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.PrimitiveCollection<string[]>("BlockCoords")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<Guid>("GameSessionId")
                        .HasColumnType("uuid");

                    b.Property<string>("HeadCoord")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsFixed")
                        .HasColumnType("boolean");

                    b.Property<int>("Length")
                        .HasColumnType("integer");

                    b.Property<int?>("LexemeId")
                        .HasColumnType("integer");

                    b.Property<string>("Locale")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GameSessionId");

                    b.HasIndex("LexemeId");

                    b.ToTable("Figures");
                });

            modelBuilder.Entity("TelegramBlock.Entities.GameSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("EndedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsWin")
                        .HasColumnType("boolean");

                    b.Property<string>("Locale")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Score")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("TelegramUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("GameSessions");
                });

            modelBuilder.Entity("TelegramBlock.Entities.Lexeme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Locale")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PartOfSpeech")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Word", "Locale")
                        .IsUnique();

                    b.ToTable("Lexemes");
                });

            modelBuilder.Entity("TelegramBlock.Entities.MoveAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("FigureId")
                        .HasColumnType("uuid");

                    b.Property<string>("FromCoord")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("GameSessionId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("PerformedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ToCoord")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MoveActions");
                });

            modelBuilder.Entity("TelegramBlock.Entities.BroadcastedLine", b =>
                {
                    b.HasOne("TelegramBlock.Entities.GameSession", null)
                        .WithMany("BroadcastedLines")
                        .HasForeignKey("GameSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TelegramBlock.Entities.Figure", b =>
                {
                    b.HasOne("TelegramBlock.Entities.GameSession", null)
                        .WithMany("Figures")
                        .HasForeignKey("GameSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TelegramBlock.Entities.Lexeme", "Lexeme")
                        .WithMany("Figures")
                        .HasForeignKey("LexemeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Lexeme");
                });

            modelBuilder.Entity("TelegramBlock.Entities.GameSession", b =>
                {
                    b.Navigation("BroadcastedLines");

                    b.Navigation("Figures");
                });

            modelBuilder.Entity("TelegramBlock.Entities.Lexeme", b =>
                {
                    b.Navigation("Figures");
                });
#pragma warning restore 612, 618
        }
    }
}
