name: fakenews

services:
  db:
    image: postgres:16-alpine
    container_name: fakenews-db
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
    ports:
      - "${POSTGRES_PORT-5432}:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    build:
      context: ./api
    image: fakenews-api:dev
    container_name: fakenews-api
    depends_on:
      db:
        condition: service_healthy
    environment:
      ASPNETCORE_URLS: http://0.0.0.0:8081
      POSTGRES_HOST: db
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      ADMIN_TOKEN: ${ADMIN_TOKEN}
    ports:
      - "8081:8081"
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8081/health"]
      interval: 5s
      timeout: 3s
      retries: 40
    command: ["migrate"]

  ui:
    build:
      context: ./ui
      args:
        VITE_API_BASE_URL: ""     # пусто → тот же origin (http://localhost:8080)
        VITE_API_PREFIX: "/api"   # префикс для nginx-прокси
    image: fakenews-ui:dev
    container_name: fakenews-ui
    depends_on:
      api:
        condition: service_healthy
    ports:
      - "8080:80"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost/healthz"]
      interval: 10s
      timeout: 3s
      retries: 3

volumes:
  dbdata:
